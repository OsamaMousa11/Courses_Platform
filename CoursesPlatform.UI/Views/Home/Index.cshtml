@model List<CourseResponse>

@{
    ViewData["Title"] = "Browse Our Courses";
}

<div class="container py-5">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-5">
        <div>
            <h1 class="fw-bold display-6">Explore Our Courses</h1>
            <p class="text-muted">Find the perfect course to advance your skills</p>
        </div>
    </div>

    <!-- Filters -->
    <div class="card border-0 shadow-sm mb-5">
        <div class="card-body p-4">
            <div class="row g-3 align-items-end">
                <div class="col-lg-6 position-relative">
                    <label class="form-label fw-semibold">Search Courses</label>
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-start-0 ps-0"
                               placeholder="Search by title, description..." value="@ViewBag.currentSearchString">
                        <button class="btn btn-outline-secondary" type="button" id="clearSearch">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                </div>

                <div class="col-lg-3">
                    <label class="form-label fw-semibold">Category</label>
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                        @if (ViewBag.Categories != null)
                        {
                            foreach (var category in ViewBag.Categories)
                            {
                                if (!string.IsNullOrEmpty(category))
                                {
                                    <option value="@category" selected="@(ViewBag.currentCategory == category)">
                                        @category
                                    </option>
                                }
                            }
                        }
                    </select>
                </div>

                <div class="col-lg-3">
                    <label class="form-label fw-semibold">Sort By</label>
                    <div class="dropdown">
                        <button class="btn btn-light border dropdown-toggle w-100 text-start d-flex justify-content-between align-items-center"
                                type="button" id="sortDropdown" data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <span>
                                @(ViewBag.currentSortBy switch
                                {
                                    "Title" => ViewBag.currentSortOrder == "ASC" ? "Title (A-Z)" : "Title (Z-A)",
                                    "Rating" => ViewBag.currentSortOrder == "DESC" ? "Highest Rated" : "Lowest Rated",
                                    "CreatedAt" => ViewBag.currentSortOrder == "DESC" ? "Newest First" : "Oldest First",
                                    _ => "Sort Options"
                                })
                            </span>
                        </button>
                        <ul class="dropdown-menu w-100" aria-labelledby="sortDropdown">
                            <!-- Sort Options Here (Same as سابقاً) -->
                        </ul>
                        <input type="hidden" id="sortBy" name="sortBy" value="@ViewBag.currentSortBy">
                        <input type="hidden" id="sortOrder" name="sortOrder" value="@ViewBag.currentSortOrder">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Courses Grid -->
    <div class="row g-4" id="coursesContainer">
        @foreach (var course in Model)
        {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="card h-100 course-card border-0 shadow-sm overflow-hidden">
                    <a asp-controller="Courses" asp-action="Details" asp-route-id="@course.CourseId" class="text-decoration-none text-dark">
                        <div class="position-relative">
                            @if (!string.IsNullOrEmpty(course.ImageUrl))
                            {
                                <img src="@course.ImageUrl" class="card-img-top" alt="@course.Title" style="height: 180px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-light d-flex align-items-center justify-content-center" style="height: 180px;">
                                    <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                                </div>
                            }

                            <div class="badge-container">
                                @if (!string.IsNullOrEmpty(course.CategoryName))
                                {
                                    <span class="badge bg-primary">@course.CategoryName</span>
                                }
                            </div>
                        </div>

                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title mb-1">@course.Title</h5>
                                @if (course.Rating.HasValue)
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-star-fill text-warning small"></i>
                                        <span class="ms-1 small fw-bold">@course.Rating.Value.ToString("0.0")</span>
                                    </div>
                                }
                            </div>

                            <p class="card-text text-muted small mb-3">
                                @if (!string.IsNullOrEmpty(course.Description) && course.Description.Length > 100)
                                {
                                    @course.Description.Substring(0, 100)
                            
                                    <text>...</text>
                                }
                                else if (!string.IsNullOrEmpty(course.Description))
                                {
                                    @course.Description
                                }
                            </p>

                            <!-- Favorite Button -->
                            <form asp-controller="Favourite" asp-action="Toggle" method="post" class="favorite-form">
                                <input type="hidden" name="courseId" value="@course.CourseId" />
                                <button type="submit" class="btn btn-link p-0 favorite-btn" title="Add to Favorites">
                                    <i class="bi @(course.IsFavorited ? "bi-heart-fill text-danger" : "bi-heart") fs-5"></i>
                                </button>
                            </form>
                        </div>
                    </a>

                    <div class="card-footer bg-transparent border-top-0 pt-0">
                        <div class="d-grid">
                            <a asp-controller="Courses" asp-action="Details" asp-route-id="@course.CourseId" class="btn btn-primary btn-sm">
                                <i class="bi bi-eye me-1"></i> View Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center py-5">
                <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                <h4 class="mt-3">No courses found</h4>
                <p class="text-muted mb-4">Try adjusting your search or filter criteria</p>
                <a href="@Url.Action("Index")" class="btn btn-primary">
                    <i class="bi bi-arrow-counterclockwise me-2"></i>Reset Filters
                </a>
            </div>
        </div>
    }

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-5">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new { page = i, searchString = ViewBag.currentSearchString, category = ViewBag.currentCategory, sortBy = ViewBag.currentSortBy, sortOrder = ViewBag.currentSortOrder })">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

@section Styles {
    <style>
        .course-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 10px;
            overflow: hidden;
        }

            .course-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .badge-container {
            position: absolute;
            top: 10px;
            left: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .course-card a {
            color: inherit;
            text-decoration: none;
        }

            .course-card a:hover {
                color: inherit;
            }

        .favorite-btn i {
            transition: color 0.3s ease;
        }

        .favorite-btn:hover i {
            color: red;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#searchInput').on('input', function () {
                filterCourses();
            });

            $('#clearSearch').click(function () {
                $('#searchInput').val('');
                filterCourses();
            });

            $('#categoryFilter').change(function () {
                filterCourses();
            });

            function filterCourses() {
                const searchTerm = $('#searchInput').val().toLowerCase();
                const category = $('#categoryFilter').val();

                $('.course-card').each(function () {
                    const card = $(this);
                    const title = card.find('.card-title').text().toLowerCase();
                    const description = card.find('.card-text').text().toLowerCase();
                    const cardCategory = card.find('.badge.bg-primary').text();

                    const matchesSearch = !searchTerm || title.includes(searchTerm) || description.includes(searchTerm);
                    const matchesCategory = !category || cardCategory === category;

                    card.closest('.col-xl-3').toggle(matchesSearch && matchesCategory);
                });
            }
        });
    </script>
}
